services:
  # Banco de dados principal para API Django
  unipost-db:
    image: postgres:16
    container_name: unipost_main_db
    environment:
      POSTGRES_DB: unipost_main
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_main_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - unipost_network

  # Banco de dados vetorizado  
  unipost-vector:
    image: ankane/pgvector:v0.5.1
    container_name: unipost_vector_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_vector_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - unipost_network

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: unipost_redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - unipost_network

  # Kibana para visualização do Elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: unipost_kibana
    environment:
      ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_URL}
    ports:
      - "5601:5601"
    networks:
      - unipost_network

  # PgAdmin para administração dos bancos Postgres
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: unipost_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@unipost.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - unipost_network

  # Redis Commander para interface do Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: unipost_redis_commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - unipost_network
    depends_on:
      - redis

  # Aplicação Django (Backend)
  unipost-api:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: unipost_api
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    networks:
      - unipost_network
    depends_on:
      - unipost-db
      - redis
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  # Aplicação Streamlit (Frontend)
  unipost-app:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: unipost_streamlit
    env_file:
      - .env
    environment:
      API_BASE_URL: http://unipost-api:8000/api/v1
    ports:
      - "${STREAMLIT_SERVER_PORT}:8555"
    volumes:
      - ./frontend:/app
    networks:
      - unipost_network
    depends_on:
      - unipost-api

volumes:
  postgres_main_data:
  postgres_vector_data:
  redis_data:
  pgadmin_data:

networks:
  unipost_network:
    driver: bridge